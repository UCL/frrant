# This is a basic workflow for deploying FRRAnt's Django web application and testing it's functionality

name: FRRAnt docker tests

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the development branch
  push:
    branches: [ development ]
  pull_request:
    branches: [ development ]

  # Check all is good in deployment every midnight
  schedule:
  - cron: "0 0 * * *"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    #  No RHEL available, testing on ubuntu instead
    runs-on: ubuntu-latest
    steps:
      # Run local tests
      - uses: actions/checkout@v2
      - name: Docker local tests
        run: |
            cd src
            ./runtests.sh
      - name: Docker build and deploy
        # build should implicitely do --no-cache since it's a branch new VM
        run: |
            pwd
            cd src
            docker-compose -f local.yml build
            docker-compose -f local.yml up -d
            docker-compose -f local.yml logs --tail="all"  
            docker-compose -f local.yml down
#   test:
#     #  No RHEL available, testing on ubuntu instead
#     runs-on: ubuntu-latest
#     steps:
#       # Run local tests
#       - uses: actions/checkout@v2
#       - name: Docker local tests
#         run: |
#             pwd
#             cd src
#             ./runtests.sh
#   build_and_deploy:
#     #  No RHEL available, testing on ubuntu instead
#     runs-on: ubuntu-latest
#     steps:
#       - name: Docker build and deploy
#         # build should implicitely do --no-cache since it's a branch new VM
#         # logs
#         run: |
#             pwd
#             cd src
#             docker-compose -f local.yml build
#             docker-compose -f local.yml up -d
#             docker-compose -f local.yml logs -f          
            
