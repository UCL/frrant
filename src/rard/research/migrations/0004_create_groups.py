# Generated by Django 3.1 on 2020-10-08 16:04

from django.db import migrations


PROJECT_GROUP_NAME = 'Project Team'
ADMIN_GROUP_NAME = 'Admin Team'
ADVISORY_BOARD_NAME = 'Advisory Board'


def add_model_permissions(group, model, ContentType, Permission):
    content_type = ContentType.objects.get_for_model(model)
    permissions = Permission.objects.filter(content_type=content_type)
    for permission in permissions:
        group.permissions.add(permission)


def create_default_groups(apps, schema_editor):
    Group = apps.get_model("auth", "Group")
    ContentType = apps.get_model("contenttypes", "ContentType")
    Permission = apps.get_model("auth", "Permission")
    
    RESEARCH_MODELS = [
        'Antiquarian',
        'BibliographyItem',
        'CitingWork',
        'Comment',
        'Concordance',
        'Fragment',
        'Image',
        'OriginalText',
        'Testimonium',
        'Topic',
        'Translation',
        'Work',
    ]

    project_group = Group.objects.create(name=PROJECT_GROUP_NAME)
    for model_name in RESEARCH_MODELS:
        model = apps.get_model("research", model_name)
        add_model_permissions(project_group, model, ContentType, Permission)

    advisory_board = Group.objects.create(name=ADVISORY_BOARD_NAME)
    for model_name in RESEARCH_MODELS:
        model = apps.get_model("research", model_name)
        add_model_permissions(advisory_board, model, ContentType, Permission)
    # need to disallow deletion of models for advisory board
    advisory_board.permissions.filter(codename__startswith='delete').delete()

    # set up specific admin permissions here
    admin_group = Group.objects.create(name=ADMIN_GROUP_NAME)
    User = apps.get_model("users", "User")
    add_model_permissions(admin_group, User, ContentType, Permission)
    add_model_permissions(admin_group, Group, ContentType, Permission)
    add_model_permissions(admin_group, Permission, ContentType, Permission)


def delete_default_groups(apps, schema_editor):
    Group = apps.get_model("auth", "Group")
    # NB they might not still be there so be cautious
    Group.objects.filter(
        name__in=[ADMIN_GROUP_NAME, PROJECT_GROUP_NAME, ADVISORY_BOARD_NAME]
    ).delete()


class Migration(migrations.Migration):

    dependencies = [
        ('research', '0003_auto_20201007_1335'),
    ]

    operations = [
        migrations.RunPython(create_default_groups, delete_default_groups)
    ]
