upstream django {
    server django:5000;
}

# Django app over HTTP
server {
    listen 80;

    server_name www.ucl.ac.uk frra-app01p.ad.ucl.ac.uk frra-pp-10-00_524.gtm.ucl.ac.uk;

    # Permanent HTTPS redirect
    #return 302 https://$server_name$request_uri;
    #return 302 https://$http_host$request_uri;

    location /history/frrant-preprod/static/ {
        alias /static/;
    }

    location / {
        resolver 127.0.0.11;
        proxy_pass http://django;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_http_version 1.1;
        proxy_buffering off;
        add_header X-Proxy $hostname;
        add_header X-Upstream $upstream_addr;
    }
}

# Django app over HTTPS
server {
    listen 443 ssl;

    include /etc/nginx/snippets/certificates.conf;
    include /etc/nginx/snippets/ssl-params.conf;

    server_name www.ucl.ac.uk frra-app01p.ad.ucl.ac.uk frra-pp-10-00_524.gtm.ucl.ac.uk;

    location = /favicon.ico { access_log off; log_not_found off; }
    location /history/frrant-preprod/static/ {
        # Serve /history/frrant-preprod/static/PATH from directory /static/PATH
        alias /static/;
    }

    # Django for everything else
    location / {
        # Use docker DNS to resolve //django correctly
        resolver 127.0.0.11;
        # Proxy /history/frrant-preprod/PATH to http://django/PATH
        proxy_pass http://django;
        # Tell Django what the original request was for
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        # Tell Django that this was originally a secure request so
        # that it does not try to redirect infinitely
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}
